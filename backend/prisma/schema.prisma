generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId   Int    @id @default(autoincrement())
  name     String @db.VarChar(100)
  username String @unique @db.VarChar(15)
  email    String @unique @db.VarChar(255)
  password String

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  Thread Thread[]
  Post   Post[]
  Coment Coment[]

  @@map("users")
}

model Thread {
  threadId String @id
  userId   Int

  User    User      @relation(fields: [userId], references: [userId])
  Message Message[]
  Post    Post[]

  createdAt Int

  @@map("threads")
}

model Message {
  messageId String @id
  threadId  String
  role      String
  content   String @db.Text

  Thread Thread @relation(fields: [threadId], references: [threadId])

  createdAt Int

  @@map("messages")
}

model Post {
  postId      String  @id @default(uuid())
  threadId    String
  userId      Int
  ownerReview String? @db.Text
  title       String  @db.VarChar(150)
  upVotes     Int     @default(0)
  downVotes   Int     @default(0)
  views       Int     @default(0)

  User   User     @relation(fields: [userId], references: [userId])
  Thread Thread   @relation(fields: [threadId], references: [threadId])
  Coment Coment[]

  createdAt DateTime @default(now())

  @@map("posts")
}

model Coment {
  comentId String @id @default(uuid())
  postId   String
  userId   Int

  Post Post @relation(fields: [postId], references: [postId])
  User User @relation(fields: [userId], references: [userId])

  createdAt DateTime @default(now())
}
